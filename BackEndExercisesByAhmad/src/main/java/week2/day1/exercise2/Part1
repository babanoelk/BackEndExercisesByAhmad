    What does JSON stand for?
JSON står for JavaScript Object Notation.
---------------------------------------------------------------------------
    What is the difference between JSON and XML?
JSON (JavaScript Object Notation) og XML (eXtensible Markup Language) er begge populære måder at strukturere og dele data på, men de adskiller sig på følgende måder:

Syntaks:
JSON: Bruger nøgle-værdi-par, arrays og objekter.
XML: Bruger tags og attributter.

Læselighed:
JSON: Enklere og mere læselig.
XML: Kan være mere kompleks og udførlig.

Parsing:
JSON: Parses generelt hurtigere.
XML: Kræver ofte mere ressourcer.

Datatyper:
JSON: Har indbyggede datatyper.
XML: Bruger tekstbaserede repræsentationer.

Brug:
JSON: Almindeligt brugt i webudvikling og dataudveksling.
XML: Historisk anvendt bredt, men anvendelsen er faldet, dog stadig udbredt i visse brancher og ældre systemer.
---------------------------------------------------------------------------
    For what is JSON generally used for?

JSON bruges meget til at sende data mellem servere og klienter på nettet. Det er nemt at forstå og bruge til at organisere data.

API-responser: Mange webtjenester bruger JSON til at sende data tilbage til apps. Dette gør det nemt for apps at forstå og bruge disse data.

Konfigurationsfiler: JSON bruges også til at gemme indstillinger i apps. Det er nemt at skrive og læse, så det er godt til at gemme forskellige typer af oplysninger.

Dataopbevaring: JSON kan bruges til at gemme data i filer eller databaser. Det er let og fleksibelt til at organisere data.

Serialisering: JSON bruges også til at omdanne objekter til tekst og tilbage igen. Dette gør det nemt at sende data over nettet eller gemme det i filer.

Kommunikation på tværs af platforme: JSON virker på mange forskellige systemer og programmeringssprog. Det er godt til at lade dem arbejde sammen.
---------------------------------------------------------------------------
    Write down the 6 data types in JSON
String: En sætning eller et ord inde i dobbelt anførselstegn, f.eks. "Hej".

Number: Et tal, som f.eks. 42 eller 3.14.

Boolean: Enten "sandt" eller "falsk".

Array: En liste med ting inde i firkantede parenteser, f.eks. [1, 2, 3].

Object: En gruppe af ting inde i krøllede parenteser, hver med et navn og en værdi, f.eks. {"navn": "John", "alder": 30}.

null: Betyder "ingen værdi".
---------------------------------------------------------------------------
    Write down the 4 JSON syntax rules
Data er i nøgle-værdipar: JSON-data er organiseret i nøgle-værdipar, hvor hver nøgle er en streng indrammet af dobbelt anførselstegn ("), efterfulgt af et kolon (:), og derefter den tilsvarende værdi. Eksempel: "navn": "John".

Data er adskilt af kommaer: Nøgle-værdipar i JSON-objekter er adskilt af kommaer (,). Elementer i JSON-arrays er også adskilt af kommaer. Eksempel: "navn": "John", "alder": 30.

Objekter er indrammet af krøllede parenteser: JSON-objekter er indrammet af krøllede parenteser ({}). De består af en samling af nøgle-værdipar. Eksempel: {"navn": "John", "alder": 30}.

Arrays er indrammet af firkantede parenteser: JSON-arrays er indrammet af firkantede parenteser ([]). De indeholder en ordnet liste af værdier, som kan være af enhver JSON-datatype, herunder objekter og arrays. Eksempel: [1, 2, 3].